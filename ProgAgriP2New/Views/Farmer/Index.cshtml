@model ProgAgriP2New.Models.ViewModels.ProductFilterViewModel

@{
    ViewData["Title"] = "Farmer Dashboard";
}

<div class="container">
    <h2>My Products</h2>

    <div class="mb-3">
        <a asp-action="AddProduct" class="btn btn-primary">Add New Product</a>
        <a asp-action="AllProducts" class="btn btn-info">View All Products</a>
    </div>

    <!-- Sorting and pagination controls -->
    <div class="card mb-4">
        <div class="card-body">
            <form asp-action="Index" method="get">
                <div class="row">
                    <div class="col-md-4 mb-3">
                        <label for="pageSize">Items per page:</label>
                        <select class="form-control" id="pageSize" name="pageSize" onchange="this.form.submit()">
                            @foreach (var size in new[] { 20, 50, 100 })
                            {
                                <option value="@size" selected="@(Model.PageSize == size)">@size</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-8 mb-3">
                        <label>Sort Order:</label>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="sortOrder" id="sortDesc" 
                                   value="desc" @(Model.SortOrder == "desc" ? "checked" : "") onchange="this.form.submit()">
                            <label class="form-check-label" for="sortDesc">Newest First</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="sortOrder" id="sortAsc" 
                                   value="asc" @(Model.SortOrder == "asc" ? "checked" : "") onchange="this.form.submit()">
                            <label class="form-check-label" for="sortAsc">Oldest First</label>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    @if (Model.Products != null && Model.Products.Any())
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Category</th>
                    <th>Production Date</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Model.Products)
                {
                    <tr>
                        <td>@product.Name</td>
                        <td>@product.Category</td>
                        <td>@product.ProductionDate.ToShortDateString()</td>
                        <td>
                            <a asp-action="EditProduct" asp-route-id="@product.ProductId" class="btn btn-sm btn-primary">Edit</a>
                            <!-- Delete button removed as requested -->
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Pagination -->
        <nav aria-label="Page navigation">
            <div class="row">
                <div class="col-md-6">
                    <p>Showing @(((Model.CurrentPage - 1) * Model.PageSize) + 1) to @(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalItems)) of @Model.TotalItems items</p>
                </div>
                <div class="col-md-6">
                    <ul class="pagination justify-content-end">
                        @if (Model.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="1"
                                   asp-route-pageSize="@Model.PageSize" asp-route-sortOrder="@Model.SortOrder">First</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage - 1)"
                                   asp-route-pageSize="@Model.PageSize" asp-route-sortOrder="@Model.SortOrder">&laquo;</a>
                            </li>
                        }

                        @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="@i"
                                   asp-route-pageSize="@Model.PageSize" asp-route-sortOrder="@Model.SortOrder">@i</a>
                            </li>
                        }

                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage + 1)"
                                   asp-route-pageSize="@Model.PageSize" asp-route-sortOrder="@Model.SortOrder">&raquo;</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="@Model.TotalPages"
                                   asp-route-pageSize="@Model.PageSize" asp-route-sortOrder="@Model.SortOrder">Last</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    }
    else
    {
        <div class="alert alert-info">
            You don't have any products yet. Click "Add New Product" to get started.
        </div>
    }

</div>

@section Scripts {
    <script>
        // Auto-submit the form when page size or sort order changes
        document.addEventListener('DOMContentLoaded', function() {
            // For page size change
            document.querySelectorAll('select[name="pageSize"]').forEach(function(select) {
                select.addEventListener('change', function() {
                    this.form.submit();
                });
            });

            // For sort order change
            document.querySelectorAll('input[name="sortOrder"]').forEach(function(radio) {
                radio.addEventListener('change', function() {
                    this.form.submit();
                });
            });
        });
    </script>
    }